"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[3092],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5543:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));n(4996);const o={id:"binaries",title:"Running a Full Node with Binaries",sidebar_label:"Using Binaries",description:"Discover how to operate an Avail full node through binaries.",keywords:["documentation","avail","node","full node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},i=void 0,l={unversionedId:"operate/node/binaries",id:"operate/node/binaries",title:"Running a Full Node with Binaries",description:"Discover how to operate an Avail full node through binaries.",source:"@site/docs/operate/node/0020-full-node-binaries.md",sourceDirName:"operate/node",slug:"/operate/node/binaries",permalink:"/operate/node/binaries",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/operate/node/0020-full-node-binaries.md",tags:[],version:"current",lastUpdatedBy:"Marko Petrli\u0107",lastUpdatedAt:1696502735,formattedLastUpdatedAt:"Oct 5, 2023",sidebarPosition:20,frontMatter:{id:"binaries",title:"Running a Full Node with Binaries",sidebar_label:"Using Binaries",description:"Discover how to operate an Avail full node through binaries.",keywords:["documentation","avail","node","full node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},sidebar:"avail",previous:{title:"Full Node",permalink:"/category/full-node"},next:{title:"Using Docker",permalink:"/operate/node/docker"}},s={},p=[{value:"Option 1: Run the Pre-Built Release",id:"option-1-run-the-pre-built-release",level:2},{value:"Option 2: Build From Source",id:"option-2-build-from-source",level:2}],d={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This guide provides step-by-step instructions on how to set up and run a full node for the Avail network using pre-compiled binaries. Whether you're a beginner or an experienced node operator, this guide aims to make the process straightforward."),(0,r.kt)("admonition",{title:"Before you start",type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Ensure that you meet the ",(0,r.kt)("a",{parentName:"strong",href:"/operate/system-requirements"},(0,r.kt)("ins",null,"system requirements")),"."),"\nWe recommend downloading the pre-compiled binary for speed and convenience.")),(0,r.kt)("h2",{id:"option-1-run-the-pre-built-release"},"Option 1: Run the Pre-Built Release"),(0,r.kt)("p",null,"All you need to do is run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'./data-avail --base-path `pwd`/data --chain kate --name "MyKateNode"\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Sample Output"),(0,r.kt)("p",null,"The client output should look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'2023-06-03 20:36:29 Avail Node\n2023-06-03 20:36:29 \u270c\ufe0f  version 1.6.0-99b85257d6b\n2023-06-03 20:36:29 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-06-03 20:36:29 \ud83d\udccb Chain specification: Avail Kate Testnet\n2023-06-03 20:36:29 \ud83c\udff7  Node name: bewildered-distance-1229\n2023-06-03 20:36:29 \ud83d\udc64 Role: FULL\n2023-06-03 20:36:29 \ud83d\udcbe Database: RocksDb at /Users/thunder/code/avail/data/chains/Avail Testnet_6831251e-0222-11ee-a2c3-c90377335962/db/full\n2023-06-03 20:36:29 \u26d3  Native runtime: data-avail-9 (data-avail-0.tx1.au11)\n2023-06-03 20:36:35 \ud83d\udc76 Creating empty BABE epoch changes on what appears to be first startup.\n2023-06-03 20:36:35 \ud83c\udff7  Local node identity is: 12D3KooWPt7odw3aeq7azZDugXjNuUvQNPU58n1VRBzY1YBqsjkr\n2023-06-03 20:36:35 Prometheus metrics extended with avail metrics\n2023-06-03 20:36:35 \ud83d\udcbb Operating system: macos\n2023-06-03 20:36:35 \ud83d\udcbb CPU architecture: aarch64\n2023-06-03 20:36:35 \ud83d\udce6 Highest known block at #0\n2023-06-03 20:36:35 \u303d\ufe0f Prometheus exporter started at 127.0.0.1:9615\n2023-06-03 20:36:35 Running JSON-RPC HTTP server: addr=127.0.0.1:9933, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-06-03 20:36:35 Running JSON-RPC WS server: addr=127.0.0.1:9944, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-06-03 20:36:35 \ud83c\udfc1 CPU score: 724.71 MiBs\n2023-06-03 20:36:35 \ud83c\udfc1 Memory score: 41.49 GiBs\n2023-06-03 20:36:35 \ud83c\udfc1 Disk score (seq. writes): 1.91 GiBs\n2023-06-03 20:36:35 \ud83c\udfc1 Disk score (rand. writes): 454.66 MiBs\n'))),(0,r.kt)("p",null,"Your node will also appear on the ",(0,r.kt)("a",{parentName:"p",href:"http://telemetry.avail.tools/"},(0,r.kt)("ins",null,"Avail Telemetry")),' site, listed under the "Node name" from the node command output. Be sure to select the appropriate network tab at the top to view your node\'s status.'),(0,r.kt)("h2",{id:"option-2-build-from-source"},"Option 2: Build From Source"),(0,r.kt)("p",null,"To compile the client source code, run the node:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cargo build --release\n./target/release/data-avail --base-path `pwd`/data --chain kate --name "MyKateNode"\n')))}c.isMDXComponent=!0}}]);