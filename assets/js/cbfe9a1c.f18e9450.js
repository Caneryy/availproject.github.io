"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[445],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||r;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9051:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=n(7462),o=(n(7294),n(3905));n(4996);const r={id:"full-node-docker",title:"How to Run a Full Node using Docker",sidebar_label:"Run a Full Node Using Docker",sidebar_position:2,description:"Learn how to run an Avail full node using Docker.",keywords:["docs","avail","node","full node","data availability","da","docker"],image:"https://availproject.github.io/img/avail/AvailDocs.png"},i=void 0,l={unversionedId:"node/full-node/full-node-docker",id:"node/full-node/full-node-docker",title:"How to Run a Full Node using Docker",description:"Learn how to run an Avail full node using Docker.",source:"@site/docs/node/full-node/full-node-docker.md",sourceDirName:"node/full-node",slug:"/node/full-node/full-node-docker",permalink:"/node/full-node/full-node-docker",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/node/full-node/full-node-docker.md",tags:[],version:"current",lastUpdatedBy:"DSalman03",lastUpdatedAt:1694064268,formattedLastUpdatedAt:"Sep 7, 2023",sidebarPosition:2,frontMatter:{id:"full-node-docker",title:"How to Run a Full Node using Docker",sidebar_label:"Run a Full Node Using Docker",sidebar_position:2,description:"Learn how to run an Avail full node using Docker.",keywords:["docs","avail","node","full node","data availability","da","docker"],image:"https://availproject.github.io/img/avail/AvailDocs.png"},sidebar:"nodeSidebar",previous:{title:"Run a Full Node using Binaries",permalink:"/node/full-node/full-node-binaries"},next:{title:"Run an RPC Node",permalink:"/node/avail-rpc-node"}},s={},d=[{value:"Before You Start",id:"before-you-start",level:2},{value:"Alternate Networks &amp; Releases Information",id:"alternate-networks--releases-information",level:4},{value:"Initial Setup",id:"initial-setup",level:2},{value:"Install Docker",id:"install-docker",level:3},{value:"Disk Setup",id:"disk-setup",level:2},{value:"Avail Setup",id:"avail-setup",level:2}],u={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Avail team provides official Docker images designed to run nodes on the ",(0,o.kt)("strong",{parentName:"p"},"Kate testnet"),". While these guidelines focus on setting up a Full Node, they can easily be modified to accommodate the requirements for running a validator node."),(0,o.kt)("h2",{id:"before-you-start"},"Before You Start"),(0,o.kt)("p",null,"The following instructions are tailored for Linux distribution with ",(0,o.kt)("inlineCode",{parentName:"p"},"apt"),"\nsupport, such as Debian.Note that the available Docker images are compatible\nonly with ",(0,o.kt)("strong",{parentName:"p"},"Linux/amd64 or x86_64 based")," CPUs. Running nodes on a cloud server\nis also common. Recommended hardware specifications for your environment are\nprovided below:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Minimum"),(0,o.kt)("th",{parentName:"tr",align:null},"Recommended"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"4GB RAM"),(0,o.kt)("td",{parentName:"tr",align:null},"8GB RAM")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"2 core CPU amd64/x86 architecture"),(0,o.kt)("td",{parentName:"tr",align:null},"4 core CPU  amd64/x86 architecture")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"20-40 GB SSD"),(0,o.kt)("td",{parentName:"tr",align:null},"200-300 GB SSD")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Port 30333")," is typically required for peer exchange. Ensure this port,\nalong with any others needed for machine access, is open when setting up your firewall\nor cloud provider's security groups."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Useful Links:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://hub.docker.com/r/availj/avail/tags"},"DockerHub Repository")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/availproject/avail/releases"},"Github Releases"))),(0,o.kt)("h4",{id:"alternate-networks--releases-information"},"Alternate Networks & Releases Information"),(0,o.kt)("p",null,"The instructions provided are specifically for the ",(0,o.kt)("strong",{parentName:"p"},"Kate testnet"),".\nTo connect to a different network, you may need to download an alternate node version\nfrom the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/availproject/avail/releases"},"node releases\npage")," and acquire the corresponding\nchain specification file. For any queries, feel free to reach out to the Avail team."),(0,o.kt)("h2",{id:"initial-setup"},"Initial Setup"),(0,o.kt)("p",null,"At this point, you should have shell access with root privileges to a linux machine."),(0,o.kt)("h3",{id:"install-docker"},"Install Docker"),(0,o.kt)("p",null,"If you do not have Docker installed, please follow the installation instructions ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/"},"here"),"."),(0,o.kt)("p",null,"In this guide, we will use the Ubuntu-specific installation instructions. It's advisable to consult the official guidelines for the most up-to-date information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sudo apt-get update\nsudo apt-get install ca-certificates curl gnupg lsb-release\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\necho \\\n  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin\n')),(0,o.kt)("p",null,"At this point, you should have Docker installed."),(0,o.kt)("p",null,"To avoid running Docker as the ",(0,o.kt)("strong",{parentName:"p"},"root")," user, which is often inconvenient, we'll adhere to the post-installation steps outlined ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/linux-postinstall/"},"here"),". This allows us to interact with Docker without requiring ",(0,o.kt)("strong",{parentName:"p"},"root")," privileges."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo groupadd docker\nsudo usermod -aG docker $USER\n\n")),(0,o.kt)("p",null,"You should now be able to log out and log back in, and execute Docker commands without the need for ",(0,o.kt)("strong",{parentName:"p"},"sudo"),"."),(0,o.kt)("h2",{id:"disk-setup"},"Disk Setup"),(0,o.kt)("p",null,"The specific steps will vary significantly based on your requirements. Typically, you'll have a root partition for the operating system on one device, and one or more separate devices for storing blockchain data. For the remainder of this guide, we'll assume that the additional storage device is mounted at ",(0,o.kt)("inlineCode",{parentName:"p"},"/mnt/avail"),"."),(0,o.kt)("p",null,"Before mounting the additional disk, it's advisable to format it and create a filesystem. For guidance on this process, you can ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html"},"follow these instructions"),"."),(0,o.kt)("p",null,"In this example, we're working with a 300 GB device located at ",(0,o.kt)("inlineCode",{parentName:"p"},"/dev/nvme1n1"),". The steps to mount this device are outlined below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir /mnt/avail\nsudo mount -a /dev/nvme1n1 /mnt/avail\nUse the the `df -h` command to verify that the mount has been successfully configured.\n\nIf everything appears to be in order, it's advisable to create additional sub-directories for storing our data and configuration files.\n\n```bash\nsudo mkdir /mnt/avail/config\nsudo mkdir /mnt/avail/state\nsudo mkdir /mnt/avail/keystore\n")),(0,o.kt)("p",null,"Based on your specific use case and operating system, you'll likely need to add an entry to ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/fstab")," to ensure the device remains mounted upon system reboot."),(0,o.kt)("p",null,"In our scenario, we'll proceed as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Use blkid to get the UUID for the device that we're mounting\n\nblkid\n\n# Edit the fstab file  and add a line to mount your device\n# UUID={your uuid}      /mnt/data   {your filesystem}   defaults    0   1\nsudo emacs /etc/fstab\n\n#you can use any test editor based on your prefereance to edit the file here we have used emacs .\n\n# use this to verify the fstab actually works\nsudo findmnt --verify --verbose\n")),(0,o.kt)("p",null,"At this stage, you should be able to reboot and verify that the system correctly mounts your device upon startup."),(0,o.kt)("h2",{id:"avail-setup"},"Avail Setup"),(0,o.kt)("p",null,"Download the Correct Chaispec file for the network in our case we are using the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Kate-Testnet"))," Chainspec."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Network"),(0,o.kt)("th",{parentName:"tr",align:null},"Docker Hub"),(0,o.kt)("th",{parentName:"tr",align:null},"Chain Specification File"),(0,o.kt)("th",{parentName:"tr",align:null},"Chain Info Reference"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Kate Testnet"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://hub.docker.com/r/availj/avail/tags"},"Releases")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://kate.avail.tools/#/explorer/chainspec"},"chainspec.raw.json")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://availproject.github.io/assets/files/chaininfo-de1eeff4d63715bbec85aae81a956d40.txt"},"Chain Info"))))),(0,o.kt)("p",null,"In our case we will download the chainspec into our config folder as ",(0,o.kt)("inlineCode",{parentName:"p"},"kate-chainspec.raw.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L -o /mnt/avail/config/kate-chainspec.raw.json https://raw.githubusercontent.com/availproject/availproject.github.io/main/static/configs/kate/chainspec.raw.json\n")),(0,o.kt)("p",null,"Now that we've downloaded our Chainspec configuration, let's proceed to launch our Avail Node."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd /mnt/avail\n\nsudo docker run -v $(pwd)/config/kate-chainspec.raw.json:/da/genesis/chainspec.raw.json -v $(pwd)/state:/da/state:rw -v $(pwd)/keystore:/da/keystore:rw -e DA_CHAIN=/da/genesis/chainspec.raw.json -e DA_NAME=kate-docker-avail-Node -p 0.0.0.0:30333:30333 -p 9615:9615 -p 9933:9933 -d --restart unless-stopped availj/avail:v1.6.2-rc1\n")),(0,o.kt)("p",null,"Now that we've downloaded our Chainspec configuration, let's proceed to launch our Avail Node. The steps in the command include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Navigating to ",(0,o.kt)("inlineCode",{parentName:"li"},"/mnt/avail")," to ensure we're in the correct directory."),(0,o.kt)("li",{parentName:"ul"},"Mounting ",(0,o.kt)("inlineCode",{parentName:"li"},"/mnt/avail/config/kate-chainspec.raw.json")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"/da/genesis/chainspec.raw.json")," in the Docker container for accurate chainspec."),(0,o.kt)("li",{parentName:"ul"},"Mapping ",(0,o.kt)("inlineCode",{parentName:"li"},"/mnt/avail/state")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"/da/state")," and granting read-write permissions to ensure data persistence, even if the container crashes."),(0,o.kt)("li",{parentName:"ul"},"Using ",(0,o.kt)("inlineCode",{parentName:"li"},"DA_CHAIN")," to specify the chainspec file within the container."),(0,o.kt)("li",{parentName:"ul"},"Setting ",(0,o.kt)("inlineCode",{parentName:"li"},"DA_NAME")," as the name of your node; in our example, it's ",(0,o.kt)("inlineCode",{parentName:"li"},"kate-docker-avail-Node"),"."),(0,o.kt)("li",{parentName:"ul"},"Utilizing port ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"30333"))," for public P2P connections, ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"9615"))," for the Prometheus metrics endpoint, and ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"9933"))," for the HTTP RPC port. For WebSocket, add port ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"9944")),"."),(0,o.kt)("li",{parentName:"ul"},"Using an image from the Avail Docker Hub repository."),(0,o.kt)("li",{parentName:"ul"},"Adding any desired chain flags after the image name, such as ",(0,o.kt)("inlineCode",{parentName:"li"},"--rpc"),".")),(0,o.kt)("p",null,"Inspect the Docker logs to verify that the node is functioning as expected."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ubuntu:/mnt/avail# docker ps\nCONTAINER ID   IMAGE                     COMMAND            CREATED         STATUS         PORTS                                                                                                            NAMES\n5b3978de8f35   availj/avail:v1.6.2-rc1   "/entrypoint.sh"   6 minutes ago   Up 6 minutes   0.0.0.0:9615->9615/tcp, :::9615->9615/tcp, 0.0.0.0:9933->9933/tcp, 0.0.0.0:30333->30333/tcp, :::9933->9933/tcp   relaxed_wilson\nubuntu:/mnt/avail# docker logs 5b3978de8f35\n# 5b3978de8f35 is the container id \n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'2023-08-21 08:29:55 Avail Node\n2023-08-21 08:29:55 \u270c\ufe0f  version 1.6.2-bb4cc104b25\n2023-08-21 08:29:55 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-08-21 08:29:55 \ud83d\udccb Chain specification: Avail Kate Testnet\n2023-08-21 08:29:55 \ud83c\udff7  Node name: kate-docker-avail-Node\n2023-08-21 08:29:55 \ud83d\udc64 Role: FULL\n2023-08-21 08:29:55 \ud83d\udcbe Database: RocksDb at /da/state/chains/Avail Testnet_116d7474-0481-11ee-bc2a-7bfc086be54e/db/full\n2023-08-21 08:29:55 \u26d3  Native runtime: data-avail-11 (data-avail-0.tx1.au11)\n2023-08-21 08:30:04 \ud83c\udff7  Local node identity is: 12D3KooWEdgyAtH8ZCU8ScTx1hx5NWh4gmDGNcedtLxrJ1htSeBe\n2023-08-21 08:30:04 Prometheus metrics extended with avail metrics\n2023-08-21 08:30:04 \ud83d\udcbb Operating system: linux\n2023-08-21 08:30:04 \ud83d\udcbb CPU architecture: x86_64\n2023-08-21 08:30:04 \ud83d\udcbb Target environment: gnu\n2023-08-21 08:30:04 \ud83d\udcbb CPU: Intel(R) Xeon(R) Platinum 8175M CPU @ 2.50GHz\n2023-08-21 08:30:04 \ud83d\udcbb CPU cores: 1\n2023-08-21 08:30:04 \ud83d\udcbb Memory: 7835MB\n2023-08-21 08:30:04 \ud83d\udcbb Kernel: 5.15.0-1040-aws\n2023-08-21 08:30:04 \ud83d\udcbb Linux distribution: Debian GNU/Linux 11 (bullseye)\n2023-08-21 08:30:04 \ud83d\udcbb Virtual machine: yes\n2023-08-21 08:30:04 \ud83d\udce6 Highest known block at #9150\n2023-08-21 08:30:04 \u303d\ufe0f Prometheus exporter started at 127.0.0.1:9615\n2023-08-21 08:30:04 Running JSON-RPC HTTP server: addr=127.0.0.1:9933, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-08-21 08:30:04 Running JSON-RPC WS server: addr=127.0.0.1:9944, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-08-21 08:30:04 \ud83c\udfc1 CPU score: 671.55 MiBs\n2023-08-21 08:30:04 \ud83c\udfc1 Memory score: 4.47 GiBs\n2023-08-21 08:30:04 \ud83c\udfc1 Disk score (seq. writes): 339.36 MiBs\n2023-08-21 08:30:04 \ud83c\udfc1 Disk score (rand. writes): 62.48 MiBs\n2023-08-21 08:30:05 \ud83d\udd0d Discovered new external address for our node: /ip4/13.53.42.153/tcp/30333/ws/p2p/12D3KooWEdgyAtH8ZCU8ScTx1hx5NWh4gmDGNcedtLxrJ1htSeBe2023-08-21 08:30:09 \u2699\ufe0f  Syncing, target=#326624 (15 peers), best: #9406 (0x875e\u2026c887), finalized #9317 (0x37b6\u202628ff), \u2b07 321.9kiB/s \u2b06 30.1kiB/s\n2023-08-21 08:30:14 \u2699\ufe0f  Syncing 64.4 bps, target=#326624 (15 peers), best: #9728 (0xb4fe\u2026e318), finalized #9317 (0x37b6\u202628ff), \u2b07 40.2kiB/s \u2b06 1.8kiB/s\n')),(0,o.kt)("p",null,"Your node will also appear on the ",(0,o.kt)("a",{parentName:"p",href:"http://telemetry.avail.tools/"},"Avail Telemetry"),'\nwebsite, listed under the "Node name" displayed in the node command output. Be sure\nto select the appropriate network tab at the top corresponding to the network you\'ve\njoined.'),(0,o.kt)("p",null,"That's it! You're now successfully running an Avail full node. \ud83c\udf89"))}p.isMDXComponent=!0}}]);