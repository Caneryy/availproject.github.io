"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[3092],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5543:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));n(4996);const o={id:"binaries",title:"Running a Full Node with Binaries",sidebar_label:"Using Binaries",description:"Discover how to operate an Avail full node through binaries.",keywords:["documentation","avail","node","full node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},i=void 0,l={unversionedId:"operate/node/binaries",id:"operate/node/binaries",title:"Running a Full Node with Binaries",description:"Discover how to operate an Avail full node through binaries.",source:"@site/docs/operate/node/0020-full-node-binaries.md",sourceDirName:"operate/node",slug:"/operate/node/binaries",permalink:"/operate/node/binaries",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/operate/node/0020-full-node-binaries.md",tags:[],version:"current",lastUpdatedBy:"Marko Petrlic",lastUpdatedAt:1699375369,formattedLastUpdatedAt:"Nov 7, 2023",sidebarPosition:20,frontMatter:{id:"binaries",title:"Running a Full Node with Binaries",sidebar_label:"Using Binaries",description:"Discover how to operate an Avail full node through binaries.",keywords:["documentation","avail","node","full node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},sidebar:"avail",previous:{title:"Full Node",permalink:"/category/full-node"},next:{title:"Using Docker",permalink:"/operate/node/docker"}},s={},p=[{value:"Option 1: Run the Pre-Built Release",id:"option-1-run-the-pre-built-release",level:2},{value:"Option 2: Build From Source",id:"option-2-build-from-source",level:2}],d={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This guide provides step-by-step instructions on how to set up and run a full node for the Avail network using pre-compiled binaries. Whether you're a beginner or an experienced node operator, this guide aims to make the process straightforward."),(0,a.kt)("admonition",{title:"Before you start",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"Ensure that you meet the ",(0,a.kt)("a",{parentName:"strong",href:"/operate/system-requirements"},(0,a.kt)("ins",null,"system requirements")),"."),"\nWe recommend downloading the pre-compiled binary for speed and convenience.")),(0,a.kt)("h2",{id:"option-1-run-the-pre-built-release"},"Option 1: Run the Pre-Built Release"),(0,a.kt)("p",null,"All you need to do is run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail -d ./data --chain goldberg --name MyAvailNode\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Sample Output"),(0,a.kt)("p",null,"The client output should look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'2023-11-07 17:35:19 Avail Node    \n2023-11-07 17:35:19 \u270c\ufe0f  version 1.8.0-9c5f37b9230    \n2023-11-07 17:35:19 \u2764\ufe0f  by Anonymous, 2017-2023    \n2023-11-07 17:35:19 \ud83d\udccb Chain specification: Avail Goldberg Testnet    \n2023-11-07 17:35:19 \ud83c\udff7  Node name: fresh-fan-5502    \n2023-11-07 17:35:19 \ud83d\udc64 Role: FULL    \n2023-11-07 17:35:19 \ud83d\udcbe Database: RocksDb at /tmp/substrateCTFPb5/chains/avail_goldberg_testnet/db/full    \n2023-11-07 17:35:20 \ud83d\udd28 Initializing Genesis block/state (state: 0x6bc7\u2026ec83, header-hash: 0x6f09\u2026a7ae)    \n2023-11-07 17:35:20 \ud83d\udc74 Loading GRANDPA authority set from genesis on what appears to be first startup.    \n2023-11-07 17:35:21 \ud83d\udc76 Creating empty BABE epoch changes on what appears to be first startup.    \n2023-11-07 17:35:21 \ud83c\udff7  Local node identity is: 12D3KooWEEa9iNANi6PUeXGaDqTgTR9T5YcP3A69nwbT4VXnG5R1    \n2023-11-07 17:35:21 Prometheus metrics extended with avail metrics    \n2023-11-07 17:35:21 \ud83d\udcbb Operating system: linux    \n2023-11-07 17:35:21 \ud83d\udcbb CPU architecture: x86_64    \n2023-11-07 17:35:21 \ud83d\udcbb Target environment: gnu    \n2023-11-07 17:35:21 \ud83d\udcbb CPU: 13th Gen Intel(R) Core(TM) i7-13700K    \n2023-11-07 17:35:21 \ud83d\udcbb CPU cores: 16    \n2023-11-07 17:35:21 \ud83d\udcbb Memory: 31863MB    \n2023-11-07 17:35:21 \ud83d\udcbb Kernel: 6.5.8-100.fc37.x86_64    \n2023-11-07 17:35:21 \ud83d\udcbb Linux distribution: Fedora Linux 37 (Workstation Edition)    \n2023-11-07 17:35:21 \ud83d\udcbb Virtual machine: no    \n2023-11-07 17:35:21 \ud83d\udce6 Highest known block at #0    \n2023-11-07 17:35:21 \u303d\ufe0f Prometheus exporter started at 127.0.0.1:9615    \n2023-11-07 17:35:21 Running JSON-RPC server: addr=127.0.0.1:9944, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]    \n2023-11-07 17:35:21 \ud83c\udfc1 CPU score: 1.62 GiBs    \n2023-11-07 17:35:21 \ud83c\udfc1 Memory score: 22.99 GiBs    \n2023-11-07 17:35:21 \ud83c\udfc1 Disk score (seq. writes): 6.78 GiBs    \n2023-11-07 17:35:21 \ud83c\udfc1 Disk score (rand. writes): 2.67 GiBs    \n2023-11-07 17:35:21 \ud83d\udd0d Discovered new external address for our node: /ip4/176.61.156.176/tcp/30333/ws/p2p/12D3KooWEEa9iNANi6PUeXGaDqTgTR9T5YcP3A69nwbT4VXnG5R1\n'))),(0,a.kt)("p",null,"Your node will also appear on the ",(0,a.kt)("a",{parentName:"p",href:"http://telemetry.avail.tools/"},(0,a.kt)("ins",null,"Avail Telemetry")),' site, listed under the "Node name" from the node command output. Be sure to select the appropriate network tab at the top to view your node\'s status.'),(0,a.kt)("h2",{id:"option-2-build-from-source"},"Option 2: Build From Source"),(0,a.kt)("p",null,"To compile the client source code, run the node:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build --release\n./target/release/data-avail -d ./data --chain goldberg --name MyAvailNode\n")))}c.isMDXComponent=!0}}]);