"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[135],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,g=u["".concat(c,".").concat(d)]||u[d]||h[d]||l;return n?a.createElement(g,r(r({ref:t},s),{},{components:n})):a.createElement(g,r({ref:t},s))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},625:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));n(4996);const l={id:"light-client-setup",title:"How to Run a Light Client",sidebar_label:"Run a Light Client",sidebar_position:5,description:"Learn how to run an Avail Light Client",keywords:["docs","avail","node","data availability","da"],image:"https://availproject.github.io/img/avail/AvailDocs.png",slug:"light-client-setup"},r=void 0,o={unversionedId:"about/light-client-setup",id:"about/light-client-setup",title:"How to Run a Light Client",description:"Learn how to run an Avail Light Client",source:"@site/docs/about/light-client.md",sourceDirName:"about",slug:"/about/light-client-setup",permalink:"/about/light-client-setup",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/about/light-client.md",tags:[],version:"current",lastUpdatedBy:"DSalman03",lastUpdatedAt:1693698607,formattedLastUpdatedAt:"Sep 2, 2023",sidebarPosition:5,frontMatter:{id:"light-client-setup",title:"How to Run a Light Client",sidebar_label:"Run a Light Client",sidebar_position:5,description:"Learn how to run an Avail Light Client",keywords:["docs","avail","node","data availability","da"],image:"https://availproject.github.io/img/avail/AvailDocs.png",slug:"light-client-setup"},sidebar:"aboutSidebar",previous:{title:"Get Testnet Tokens",permalink:"/about/testnet-faucet"}},c={},p=[{value:"Quick Setup",id:"quick-setup",level:2},{value:"Building From Source",id:"building-from-source",level:2}],s={toc:p},u="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"quick-setup"},"Quick Setup"),(0,i.kt)("p",null,"Follow these steps to connect a light client to the Kate testnet."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Download the client binary and config file for the network you want to join:"),(0,i.kt)("table",{parentName:"li"},(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Network"),(0,i.kt)("th",{parentName:"tr",align:null},"Client Binary"),(0,i.kt)("th",{parentName:"tr",align:null},"Config File"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Kate Testnet"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/availproject/avail-light/releases/tag/v1.6.0-rc1"},"v1.6.0-rc1")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{target:"_blank",href:"/configs/kate/avail-light-1.4.3/config.yaml",download:!0},"Config")))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Unpack both files into a folder, and run the client (adjust for\nplatform or version in the downloaded binary name):"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./avail-light -c config.yaml\n")),(0,i.kt)("p",{parentName:"li"},"The client output should look like this:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'2023-06-04T02:56:31.871284Z  INFO avail_light::telemetry: Metrics server on http://0.0.0.0:9520/metrics\n2023-06-04T02:56:31.884271Z  INFO avail_light::http: RPC running on http://127.0.0.1:7000\n2023-06-04T02:56:31.884386Z  INFO avail_light::network: Local peer id: PeerId("12D3KooWQ77VEayXfSPWcj6ucAGcjZRTL8ANmtjsuULoyToGSBoo"). Public key: Ed25519(PublicKey(compressed): d44de4113b372855a655f1675325379705aa7a273698194e8e6814dab7791a).\n2023-06-04T02:56:31.884605Z  INFO Server::run{addr=127.0.0.1:7000}: warp::server: listening on http://127.0.0.1:7000\n2023-06-04T02:56:31.892181Z  INFO avail_light::network::event_loop: Local node is listening on "/ip4/127.0.0.1/udp/37000/quic-v1"\n2023-06-04T02:56:31.892487Z  INFO avail_light: Bootstraping the DHT with bootstrap nodes...\n2023-06-04T02:56:31.892487Z  INFO avail_light::network::event_loop: Local node is listening on "/ip4/192.168.1.146/udp/37000/quic-v1"\n2023-06-04T02:56:31.892540Z  INFO avail_light::network::event_loop: Local node is listening on "/ip4/127.0.0.1/tcp/37000"\n2023-06-04T02:56:31.892745Z  INFO avail_light::network::event_loop: Local node is listening on "/ip4/192.168.1.146/tcp/37000"\n2023-06-04T02:56:42.220179Z  INFO avail_light::rpc: Connection established to the node: wss://kate-beta.avail.tools:443/ws <v1.6.0-99b85257d6b/data-avail/9>\n2023-06-04T02:56:42.444576Z  INFO avail_light::light_client: Starting light client...\n2023-06-04T02:56:43.453935Z  INFO avail_light::subscriptions: Received finalized block header header.number=2074\n2023-06-04T02:56:43.455236Z  INFO avail_light::light_client: Processing finalized block block_number=2074 block_delay=0\n2023-06-04T02:56:43.456055Z  INFO avail_light::light_client: Random cells generated: 4 block_number=2074 cells_requested=4\n2023-06-04T02:56:43.617885Z  INFO avail_light::light_client: Number of cells fetched from DHT: 0 block_number=2074 cells_from_dht=0\n2023-06-04T02:56:43.820098Z  INFO avail_light::light_client: Number of cells fetched from RPC: 4 block_number=2074 cells_from_rpc=4\n2023-06-04T02:56:43.889260Z  INFO avail_light::light_client: Completed 4 verification rounds in     433.968ms block_number=2074\n2023-06-04T02:56:43.889395Z  INFO avail_light::light_client: Confidence factor: 93.75 block_number=2074 confidence=93.75\n2023-06-04T02:56:43.889495Z  INFO avail_light::light_client: Partition cells received. Time elapsed:    0ns block_number=2074 partition_retrieve_time_elapsed=0.0 partition_cells_fetched=4\n2023-06-04T02:56:44.050133Z  INFO avail_light::light_client: DHT PUT operation success rate: inf block_number=2074\n2023-06-04T02:56:44.050211Z  INFO avail_light::light_client: 4 cells inserted into DHT. Time elapsed:   160.697ms block_number=2074 partition_dht_insert_time_elapsed=0.160697\n')))),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"That's it! There is no step 3. You're running the light client \ud83c\udf89"),(0,i.kt)("p",{parentName:"li"},"Refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/availproject/avail-light#config-reference"},"config\nreference"),'\nfor available configuration options. And check out the "Using Avail"\nsection of these docs for guides and examples for how to interact with\nAvail, embed the light client into your application, and more.'))),(0,i.kt)("h2",{id:"building-from-source"},"Building From Source"),(0,i.kt)("p",null,"We recommend the binary download above because it's faster and easier,\nbut if you need to build the client (e.g. for a platform we don't have\nbinaries for), these are the steps to follow:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Ensure have Rust installed:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://sh.rustup.rs -sSf | sh\nsource $HOME/.cargo/env\nrustup update nightly\nrustup target add wasm32-unknown-unknown --toolchain nightly\nrustc --version # verify rust is working, print the installed version\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Clone the light client ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/availproject/avail-light"},"git repository"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/availproject/avail-light.git\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Build and run the light client:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd avail-light\ncargo run\n")),(0,i.kt)("p",{parentName:"li"},"The client will generate a default ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml"),' file, but it will\nnot be connected to any network. Replace the config with the\nappropriate one from the "Quick Setup" section above, and re-run\nthe client. That\'s it!'))))}h.isMDXComponent=!0}}]);