"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[9794],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>f});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),c=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},d=function(t){var e=c(t.components);return r.createElement(p.Provider,{value:e},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,p=t.parentName,d=l(t,["components","mdxType","originalType","parentName"]),s=c(a),u=n,f=s["".concat(p,".").concat(u)]||s[u]||m[u]||i;return a?r.createElement(f,o(o({ref:e},d),{},{components:a})):r.createElement(f,o({ref:e},d))}));function f(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[s]="string"==typeof t?t:n,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4274:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const i={id:"explorations",title:"Avail Uncharted",sidebar_label:"Explorations",description:"Exploring Uncharted Horizons in Modular Blockchains."},o=void 0,l={unversionedId:"explorations",id:"explorations",title:"Avail Uncharted",description:"Exploring Uncharted Horizons in Modular Blockchains.",source:"@site/docs/exploration.md",sourceDirName:".",slug:"/explorations",permalink:"/explorations",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/exploration.md",tags:[],version:"current",lastUpdatedBy:"DSalman03",lastUpdatedAt:1698621744,formattedLastUpdatedAt:"Oct 29, 2023",frontMatter:{id:"explorations",title:"Avail Uncharted",sidebar_label:"Explorations",description:"Exploring Uncharted Horizons in Modular Blockchains."},sidebar:"avail",previous:{title:"Validiums",permalink:"/about/introduction/validiums"},next:{title:"Glossary",permalink:"/glossary"}},p={},c=[{value:"Overview",id:"overview",level:2},{value:"Active Projects",id:"active-projects",level:2}],d={toc:c},s="wrapper";function m(t){let{components:e,...a}=t;return(0,n.kt)(s,(0,r.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Avail Uncharted is a core initiative within the Avail ecosystem dedicated to exploring uncharted territories in modular blockchain technology.\nDriven by the core Avail team, the mission is twofold: to nurture innovative projects and to cultivate a close-knit collaboration with the community."),(0,n.kt)("h2",{id:"active-projects"},"Active Projects"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Project"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Repository"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Avail-Powered Optimistic EVM Rollup"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A sovereign EVM-compatible optimistic rollup construction."),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/availproject/op-evm"},(0,n.kt)("ins",null,"op-evm")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"DA Adapter for Sovereign SDK"),(0,n.kt)("td",{parentName:"tr",align:"left"},"An adapter enabling modular sovereign rollups using the Sovereign Rollup SDK."),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/availproject/sovereign-sdk/tree/main"},(0,n.kt)("ins",null,"sovereign-da-adapter")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"DA Interface for Madara Starknet"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A unified DA interface allowing the Madara Starknet Sequencer to publish data onto Avail."),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/keep-starknet-strange/madara/pull/1021"},(0,n.kt)("ins",null,"madara-da-interface")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Avail-Powered zkEVM-Based Validium"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A Validium based on the Polygon zkEVM stack that uses Avail instead of the native DAC for data availability."),(0,n.kt)("td",{parentName:"tr",align:"left"},"- ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/QEDK/validium-node"},(0,n.kt)("ins",null,"validium-node"))," ",(0,n.kt)("br",null)," - ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/QEDK/validium-contracts"},(0,n.kt)("ins",null,"validium-contracts")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"DA Adapter for Optimism SDK"),(0,n.kt)("td",{parentName:"tr",align:"left"},"An adapter facilitating Avail DA's integration with Optimism's Rollup SDK op-stack."),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/availproject/avail-op-stack-adapter"},(0,n.kt)("ins",null,"avail-op-stack-adapter")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"DA Adapter for Rollkit"),(0,n.kt)("td",{parentName:"tr",align:"left"},"An adapter designed for Rollkit's modular rollup framework that enables ABCI-compatible solutions."),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/rollkit/rollkit/pull/1168"},(0,n.kt)("ins",null,"rollkit-da-adapter")))))))}m.isMDXComponent=!0}}]);