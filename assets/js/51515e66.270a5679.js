"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[2579],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>v});var n=a(7294);function i(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){i(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,i=function(t,e){if(null==t)return{};var a,n,i={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(i[a]=t[a]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(i[a]=t[a])}return i}var c=n.createContext({}),s=function(t){var e=n.useContext(c),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},u=function(t){var e=s(t.components);return n.createElement(c.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},b=n.forwardRef((function(t,e){var a=t.components,i=t.mdxType,r=t.originalType,c=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),p=s(a),b=i,v=p["".concat(c,".").concat(b)]||p[b]||d[b]||r;return a?n.createElement(v,o(o({ref:e},u),{},{components:a})):n.createElement(v,o({ref:e},u))}));function v(t,e){var a=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=a.length,o=new Array(r);o[0]=b;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l[p]="string"==typeof t?t:i,o[1]=l;for(var s=2;s<r;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},9679:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var n=a(7462),i=(a(7294),a(3905));a(4996);const r={id:"introduction",title:"What is Avail?",sidebar_label:"What is Avail",description:"Learn about Avail's data availability chain",keywords:["docs","avail","availability","scale","rollup"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},o=void 0,l={unversionedId:"about/introduction",id:"about/introduction",title:"What is Avail?",description:"Learn about Avail's data availability chain",source:"@site/docs/about/introduction.md",sourceDirName:"about",slug:"/about/introduction",permalink:"/about/introduction",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/about/introduction.md",tags:[],version:"current",lastUpdatedBy:"DSalman03",lastUpdatedAt:1697443636,formattedLastUpdatedAt:"Oct 16, 2023",frontMatter:{id:"introduction",title:"What is Avail?",sidebar_label:"What is Avail",description:"Learn about Avail's data availability chain",keywords:["docs","avail","availability","scale","rollup"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},sidebar:"avail",previous:{title:"Home",permalink:"/"},next:{title:"Quickstart",permalink:"/build/quickstart"}},c={},s=[],u={toc:s},p="wrapper";function d(t){let{components:e,...a}=t;return(0,i.kt)(p,(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Avail is a ",(0,i.kt)("strong",{parentName:"p"},"modular blockchain")," that is laser-focused on ",(0,i.kt)("strong",{parentName:"p"},"data\navailability"),": ordering, publishing transactions, and making it\npossible to verify that block data is available without downloading\nthe whole block. This modular approach with a strong data availability\nlayer at the core enables scalability while maintaining security."),(0,i.kt)("p",null,"Since Avail is data-agnostic, it can support any execution\nenvironment: EVM, WASM, custom new runtimes, etc. The modular approach\nalso allows a wide array of possible designs to be built on top, such\nas sovereign ZK or OP appchains, general purpose rollups, sidechains,\nvalidiums, and more. And they don't require recruiting a new validator\nset, only posting transactions on Avail. Independence and flexibility\nmatched by shared security and scalability."),(0,i.kt)("p",null,"Applications in Avail are built as one of the designs mentioned above\n(such as a ZK sovereign appchain), or can be deployed as contracts on\na modular execution layer."))}d.isMDXComponent=!0}}]);