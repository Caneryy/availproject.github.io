"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[395],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var o=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=o.createContext({}),p=function(e){var t=o.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(a),h=n,m=u["".concat(s,".").concat(h)]||u[h]||c[h]||r;return a?o.createElement(m,i(i({ref:t},d),{},{components:a})):o.createElement(m,i({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<r;p++)i[p]=a[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}h.displayName="MDXCreateElement"},8082:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=a(7462),n=(a(7294),a(3905));a(4996);const r={id:"avail-bootstrap-node",title:"How to Run a Bootstrap Node",sidebar_label:"Run a Bootstrap Node",sidebar_position:4,description:"Learn how to run an Avail bootstrap node.",keywords:["docs","avail","node","data availability","da"],image:"https://availproject.github.io/img/avail/AvailDocs.png"},i=void 0,l={unversionedId:"node/avail-bootstrap-node",id:"node/avail-bootstrap-node",title:"How to Run a Bootstrap Node",description:"Learn how to run an Avail bootstrap node.",source:"@site/docs/node/0050-avail-bootstrap-node.md",sourceDirName:"node",slug:"/node/avail-bootstrap-node",permalink:"/node/avail-bootstrap-node",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/node/0050-avail-bootstrap-node.md",tags:[],version:"current",lastUpdatedBy:"DSalman03",lastUpdatedAt:1693606465,formattedLastUpdatedAt:"Sep 1, 2023",sidebarPosition:4,frontMatter:{id:"avail-bootstrap-node",title:"How to Run a Bootstrap Node",sidebar_label:"Run a Bootstrap Node",sidebar_position:4,description:"Learn how to run an Avail bootstrap node.",keywords:["docs","avail","node","data availability","da"],image:"https://availproject.github.io/img/avail/AvailDocs.png"},sidebar:"nodeSidebar",previous:{title:"Run an RPC Node",permalink:"/node/avail-rpc-node"},next:{title:"Run a Relay Node",permalink:"/node/avail-relay-node"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation Steps",id:"installation-steps",level:2},{value:"1. Install Rust and Dependencies",id:"1-install-rust-and-dependencies",level:3},{value:"2. Clone the Bootstrap Node Repository",id:"2-clone-the-bootstrap-node-repository",level:3},{value:"3. Compile the Binary",id:"3-compile-the-binary",level:3},{value:"4. Deploy the Binary",id:"4-deploy-the-binary",level:3},{value:"5. Create and Edit the Configuration File",id:"5-create-and-edit-the-configuration-file",level:3}],d={toc:p},u="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,o.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This guide provides a step-by-step walkthrough for setting up a bootstrap node, which serves as an entry point for light clients in your network.\nbootstrap nodes play a vital role in network stability and discoverability. They help new nodes join the network, assist in peer discovery, and often serve as a fallback mechanism to maintain network connectivity. "),(0,n.kt)("p",null,"It's advisable to deploy multiple bootstrap nodes. A good rule of thumb is to have at least three to five bootstrap nodes to kickstart a new network.\nFollow the installation and configuration steps below to get your bootstrap node up and running."),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A local machine or a cloud-based Virtual Machine (VM)"),(0,n.kt)("li",{parentName:"ul"},"Basic familiarity with command-line operations"),(0,n.kt)("li",{parentName:"ul"},"Rust programming language installed")),(0,n.kt)("h2",{id:"installation-steps"},"Installation Steps"),(0,n.kt)("h3",{id:"1-install-rust-and-dependencies"},"1. Install Rust and Dependencies"),(0,n.kt)("p",null,"First, you'll need to install Rust and its toolchain. Open your terminal and run the following commands:"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"If you're using a new machine (i.e. Ubuntu), you may need to install essential build tools:")),(0,n.kt)("blockquote",null,(0,n.kt)("pre",{parentName:"blockquote"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt install build-essential\n"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://sh.rustup.rs -sSf | sh  # Download and install Rust\nsource $HOME/.cargo/env              # Add Rust to your PATH\nrustup update nightly                # Update to the nightly version\nrustup target add wasm32-unknown-unknown --toolchain nightly  # Add WebAssembly target\nrustc --version                      # Verify Rust installation by displaying the version\n")),(0,n.kt)("h3",{id:"2-clone-the-bootstrap-node-repository"},"2. Clone the Bootstrap Node Repository"),(0,n.kt)("p",null,"Clone the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/availproject/avail-light-bootstrap/tree/main"},"Bootstrap Node project repository"),"\nfrom GitHub to your local machine or VM:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/availproject/avail-light-bootstrap.git\n")),(0,n.kt)("h3",{id:"3-compile-the-binary"},"3. Compile the Binary"),(0,n.kt)("p",null,"Navigate to the cloned project directory and compile the source code:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd avail-light-bootstrap              \ncargo build --release                 # Compile the project in release mode\n")),(0,n.kt)("p",null,"Upon successful compilation, you'll find the binary at ",(0,n.kt)("inlineCode",{parentName:"p"},"target/release/avail-light-bootstrap"),"."),(0,n.kt)("h3",{id:"4-deploy-the-binary"},"4. Deploy the Binary"),(0,n.kt)("p",null,"If you've compiled the binary on a local machine, transfer it to your server using ",(0,n.kt)("inlineCode",{parentName:"p"},"scp")," or any other secure method."),(0,n.kt)("h3",{id:"5-create-and-edit-the-configuration-file"},"5. Create and Edit the Configuration File"),(0,n.kt)("p",null,"On your server, navigate to the directory where you've placed the binary. Create and edit a ",(0,n.kt)("inlineCode",{parentName:"p"},"config.yaml")," file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"touch config.yaml                     # Create a new config.yaml file\nnano config.yaml                      # Open the file in a text editor\n")),(0,n.kt)("p",null,"Populate the file with the following example configuration:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"log_level: 'INFO'                     # Logging level\nlog_format_json: false                # Log format\nsecret_key: { seed: \"unique_seed\" }  # Secret key setting\nlibp2p_port: 39000                    # libp2p port\nlibp2p_identify_protocol: '/avail_kad/id/1.0.0'  # libp2p protocol\n")),(0,n.kt)("p",null,"For more advanced configurations, consult the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/availproject/avail-light-bootstrap#config-reference"},"Configuration Reference"),"."),(0,n.kt)("p",null,"Congratulations! You've successfully set up a Bootstrap Node. Your node is now ready to serve as an entry point for light clients in your network. Happy bootstrapping! \ud83d\ude80"))}c.isMDXComponent=!0}}]);