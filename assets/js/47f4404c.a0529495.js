"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[656],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(a),h=o,k=u["".concat(s,".").concat(h)]||u[h]||p[h]||i;return a?n.createElement(k,r(r({ref:t},c),{},{components:a})):n.createElement(k,r({ref:t},c))}));function k(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,r[1]=l;for(var d=2;d<i;d++)r[d]=a[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},8564:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(7462),o=(a(7294),a(3905)),i=a(4996);const r={id:"validator-docker",title:"How to Run a Validator Node using Docker",sidebar_label:"Run a Validator Node Using Docker",sidebar_position:2,description:"Learn about running an Avail validator using Docker.",keywords:["docs","avail","node","docker","validator","data availability"],image:"https://availproject.github.io/img/avail/AvailDocs.png"},l=void 0,s={unversionedId:"validators/validator-node/validator-docker",id:"validators/validator-node/validator-docker",title:"How to Run a Validator Node using Docker",description:"Learn about running an Avail validator using Docker.",source:"@site/docs/validators/validator-node/validator-node-docker.md",sourceDirName:"validators/validator-node",slug:"/validators/validator-node/validator-docker",permalink:"/validators/validator-node/validator-docker",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/validators/validator-node/validator-node-docker.md",tags:[],version:"current",lastUpdatedBy:"DSalman03",lastUpdatedAt:1694064268,formattedLastUpdatedAt:"Sep 7, 2023",sidebarPosition:2,frontMatter:{id:"validator-docker",title:"How to Run a Validator Node using Docker",sidebar_label:"Run a Validator Node Using Docker",sidebar_position:2,description:"Learn about running an Avail validator using Docker.",keywords:["docs","avail","node","docker","validator","data availability"],image:"https://availproject.github.io/img/avail/AvailDocs.png"},sidebar:"validatorsSidebar",previous:{title:"Run a Validator Node using Binaries",permalink:"/validators/validator-node/validator-binaries"},next:{title:"Backup Your Validator",permalink:"/validators/avail-backup-node"}},d={},c=[{value:"Before you start",id:"before-you-start",level:2},{value:"Alternate Networks &amp; Releases Information",id:"alternate-networks--releases-information",level:4},{value:"Initial Setup",id:"initial-setup",level:2},{value:"Install Docker",id:"install-docker",level:3},{value:"Disk Setup",id:"disk-setup",level:2},{value:"Avail Setup",id:"avail-setup",level:2},{value:"Prepare for Staking",id:"prepare-for-staking",level:2},{value:"Create Avail Accounts",id:"create-avail-accounts",level:3},{value:"Bonding Process",id:"bonding-process",level:3},{value:"Session Key Management",id:"session-key-management",level:2},{value:"Rotating Session Keys",id:"rotating-session-keys",level:3},{value:"Submitting the <code>setKeys</code> Transaction",id:"submitting-the-setkeys-transaction",level:3},{value:"Becoming a Validator",id:"becoming-a-validator",level:2},{value:"Starting Validation",id:"starting-validation",level:3},{value:"Verifying Validator Status",id:"verifying-validator-status",level:3},{value:"Validator in Action",id:"validator-in-action",level:3}],u={toc:c},p="wrapper";function h(e){let{components:t,...a}=e;return(0,o.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Avail team provides official Docker images designed to run nodes on\nthe ",(0,o.kt)("strong",{parentName:"p"},"Kate testnet"),"."),(0,o.kt)("h2",{id:"before-you-start"},"Before you start"),(0,o.kt)("p",null,"The following instructions are tailored for Linux distribution with ",(0,o.kt)("inlineCode",{parentName:"p"},"apt"),"\nsupport, such as Debian.Note that the available Docker images are compatible\nonly with ",(0,o.kt)("strong",{parentName:"p"},"Linux/amd64 or x86_64 based")," CPUs. Running nodes on a cloud server\nis also common. Recommended hardware specifications for your environment are\nprovided below:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Minimum"),(0,o.kt)("th",{parentName:"tr",align:null},"Recommended"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"4GB RAM"),(0,o.kt)("td",{parentName:"tr",align:null},"8GB RAM")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"2 core CPU amd64/x86 architecture"),(0,o.kt)("td",{parentName:"tr",align:null},"4 core CPU  amd64/x86 architecture")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"20-40 GB SSD"),(0,o.kt)("td",{parentName:"tr",align:null},"200-300 GB SSD")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Port 30333")," is typically required for peer exchange. Ensure this port,\nalong with any others needed for machine access, is open when setting up your\nfirewall  or cloud provider's security groups."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Useful Links:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://hub.docker.com/r/availj/avail/tags"},"DockerHub Repository")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/availproject/avail/releases"},"Github Releases"))),(0,o.kt)("h4",{id:"alternate-networks--releases-information"},"Alternate Networks & Releases Information"),(0,o.kt)("p",null,"The instructions provided are specifically for the ",(0,o.kt)("strong",{parentName:"p"},"Kate testnet"),".\nTo connect to a different network, you may need to download an alternate node\nversion from the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/availproject/avail/releases"},"node releases page")," and acquire\nthe corresponding chain specification file. For any queries, feel free to reach out\nto the Avail team."),(0,o.kt)("h2",{id:"initial-setup"},"Initial Setup"),(0,o.kt)("p",null,"At this point, you should have shell access with root privileges to a linux machine."),(0,o.kt)("h3",{id:"install-docker"},"Install Docker"),(0,o.kt)("p",null,"If you do not have Docker installed, please follow the installation instructions ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/"},"here"),"."),(0,o.kt)("p",null,"In this guide, we will use the Ubuntu-specific installation instructions. It's advisable to consult the official guidelines for the most up-to-date information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sudo apt-get update\nsudo apt-get install ca-certificates curl gnupg lsb-release\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\necho \\\n  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin\n')),(0,o.kt)("p",null,"At this point, you should have Docker installed."),(0,o.kt)("p",null,"To avoid running Docker as the ",(0,o.kt)("strong",{parentName:"p"},"root")," user, which is often inconvenient, we'll adhere to the post-installation steps outlined ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/linux-postinstall/"},"here"),". This allows us to interact with Docker without requiring ",(0,o.kt)("strong",{parentName:"p"},"root")," privileges."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo groupadd docker\nsudo usermod -aG docker $USER\n\n")),(0,o.kt)("p",null,"You should now be able to log out and log back in, and execute Docker commands without the need for ",(0,o.kt)("strong",{parentName:"p"},"sudo"),"."),(0,o.kt)("h2",{id:"disk-setup"},"Disk Setup"),(0,o.kt)("p",null,"The specific steps will vary significantly based on your requirements. Typically, you'll have a root partition for the operating system on one device, and one or more separate devices for storing blockchain data. For the remainder of this guide, we'll assume that the additional storage device is mounted at ",(0,o.kt)("inlineCode",{parentName:"p"},"/mnt/avail"),"."),(0,o.kt)("p",null,"Before mounting the additional disk, it's advisable to format it and create a filesystem. For guidance on this process, you can ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html"},"follow these instructions"),"."),(0,o.kt)("p",null,"In this example, we're working with a 300 GB device located at ",(0,o.kt)("inlineCode",{parentName:"p"},"/dev/nvme1n1"),". The steps to mount this device are outlined below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir /mnt/avail\nsudo mount -a /dev/nvme1n1 /mnt/avail\nUse the the `df -h` command to verify that the mount has been successfully configured.\n\nIf everything appears to be in order, it's advisable to create additional sub-directories for storing our data and configuration files.\n\n```bash\nsudo mkdir /mnt/avail/config\nsudo mkdir /mnt/avail/state\nsudo mkdir /mnt/avail/keystore\n")),(0,o.kt)("p",null,"Based on your specific use case and operating system, you'll likely need to add an entry to ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/fstab")," to ensure the device remains mounted upon system reboot."),(0,o.kt)("p",null,"In our scenario, we'll proceed as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Use blkid to get the UUID for the device that we're mounting\n\nblkid\n\n# Edit the fstab file  and add a line to mount your device\n# UUID={your uuid}      /mnt/data   {your filesystem}   defaults    0   1\nsudo emacs /etc/fstab\n\n#you can use any test editor based on your prefereance to edit the file here we have used emacs .\n\n# use this to verify the fstab actually works\nsudo findmnt --verify --verbose\n")),(0,o.kt)("p",null,"At this stage, you should be able to reboot and verify that the system correctly mounts your device upon startup."),(0,o.kt)("h2",{id:"avail-setup"},"Avail Setup"),(0,o.kt)("p",null,"Download the Correct Chaispec file for the network in our case we are using the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Kate-Testnet"))," Chainspec."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Network"),(0,o.kt)("th",{parentName:"tr",align:null},"Docker Hub"),(0,o.kt)("th",{parentName:"tr",align:null},"Chain Specification File"),(0,o.kt)("th",{parentName:"tr",align:null},"Chain Info Reference"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Kate Testnet"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://hub.docker.com/r/availj/avail/tags"},"Releases")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://kate.avail.tools/#/explorer/chainspec"},"chainspec.raw.json")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://availproject.github.io/assets/files/chaininfo-de1eeff4d63715bbec85aae81a956d40.txt"},"Chain Info"))))),(0,o.kt)("p",null,"In our case we will download the chainspec into our config folder as ",(0,o.kt)("inlineCode",{parentName:"p"},"kate-chainspec.raw.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L -o /mnt/avail/config/kate-chainspec.raw.json https://raw.githubusercontent.com/availproject/availproject.github.io/main/static/configs/kate/chainspec.raw.json\n")),(0,o.kt)("p",null,"Now that we've downloaded our Chainspec configuration, let's proceed to launch our Avail Node."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd /mnt/avail\n\nsudo docker run -v $(pwd)/config/kate-chainspec.raw.json:/da/genesis/chainspec.raw.json -v $(pwd)/state:/da/state:rw -v $(pwd)/keystore:/da/keystore:rw -e DA_CHAIN=/da/genesis/chainspec.raw.json -e DA_NAME=kate-docker-avail-Node -p 0.0.0.0:30333:30333 -p 9615:9615 -p 9933:9933 -d --restart unless-stopped availj/avail:v1.6.2-rc1\n")),(0,o.kt)("p",null,"Now that we've downloaded our Chainspec configuration, let's proceed to launch our Avail Node. The steps in the command include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Navigating to ",(0,o.kt)("inlineCode",{parentName:"li"},"/mnt/avail")," to ensure we're in the correct directory."),(0,o.kt)("li",{parentName:"ul"},"Mounting ",(0,o.kt)("inlineCode",{parentName:"li"},"/mnt/avail/config/kate-chainspec.raw.json")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"/da/genesis/chainspec.raw.json")," in the Docker container for accurate chainspec."),(0,o.kt)("li",{parentName:"ul"},"Mapping ",(0,o.kt)("inlineCode",{parentName:"li"},"/mnt/avail/state")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"/da/state")," and granting read-write permissions to ensure data persistence, even if the container crashes."),(0,o.kt)("li",{parentName:"ul"},"Using ",(0,o.kt)("inlineCode",{parentName:"li"},"DA_CHAIN")," to specify the chainspec file within the container."),(0,o.kt)("li",{parentName:"ul"},"Setting ",(0,o.kt)("inlineCode",{parentName:"li"},"DA_NAME")," as the name of your node; in our example, it's ",(0,o.kt)("inlineCode",{parentName:"li"},"kate-docker-avail-Node"),"."),(0,o.kt)("li",{parentName:"ul"},"Utilizing port ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"30333"))," for public P2P connections, ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"9615"))," for the Prometheus metrics endpoint, and ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"9933"))," for the HTTP RPC port. For WebSocket, add port ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"9944")),"."),(0,o.kt)("li",{parentName:"ul"},"Using an image from the Avail Docker Hub repository."),(0,o.kt)("li",{parentName:"ul"},"Adding any desired chain flags after the image name, such as ",(0,o.kt)("inlineCode",{parentName:"li"},"--rpc"),".")),(0,o.kt)("p",null,"Inspect the Docker logs to verify that the node is functioning as expected."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ubuntu:/mnt/avail# docker ps\nCONTAINER ID   IMAGE                     COMMAND            CREATED         STATUS         PORTS                                                                                                            NAMES\n5b3978de8f35   availj/avail:v1.6.2-rc1   "/entrypoint.sh"   6 minutes ago   Up 6 minutes   0.0.0.0:9615->9615/tcp, :::9615->9615/tcp, 0.0.0.0:9933->9933/tcp, 0.0.0.0:30333->30333/tcp, :::9933->9933/tcp   relaxed_wilson\nubuntu:/mnt/avail# docker logs 5b3978de8f35\n# 5b3978de8f35 is the container id \n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'2023-08-21 08:29:55 Avail Node\n2023-08-21 08:29:55 \u270c\ufe0f  version 1.6.2-bb4cc104b25\n2023-08-21 08:29:55 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-08-21 08:29:55 \ud83d\udccb Chain specification: Avail Kate Testnet\n2023-08-21 08:29:55 \ud83c\udff7  Node name: kate-docker-avail-Node\n2023-08-21 08:29:55 \ud83d\udc64 Role: FULL\n2023-08-21 08:29:55 \ud83d\udcbe Database: RocksDb at /da/state/chains/Avail Testnet_116d7474-0481-11ee-bc2a-7bfc086be54e/db/full\n2023-08-21 08:29:55 \u26d3  Native runtime: data-avail-11 (data-avail-0.tx1.au11)\n2023-08-21 08:30:04 \ud83c\udff7  Local node identity is: 12D3KooWEdgyAtH8ZCU8ScTx1hx5NWh4gmDGNcedtLxrJ1htSeBe\n2023-08-21 08:30:04 Prometheus metrics extended with avail metrics\n2023-08-21 08:30:04 \ud83d\udcbb Operating system: linux\n2023-08-21 08:30:04 \ud83d\udcbb CPU architecture: x86_64\n2023-08-21 08:30:04 \ud83d\udcbb Target environment: gnu\n2023-08-21 08:30:04 \ud83d\udcbb CPU: Intel(R) Xeon(R) Platinum 8175M CPU @ 2.50GHz\n2023-08-21 08:30:04 \ud83d\udcbb CPU cores: 1\n2023-08-21 08:30:04 \ud83d\udcbb Memory: 7835MB\n2023-08-21 08:30:04 \ud83d\udcbb Kernel: 5.15.0-1040-aws\n2023-08-21 08:30:04 \ud83d\udcbb Linux distribution: Debian GNU/Linux 11 (bullseye)\n2023-08-21 08:30:04 \ud83d\udcbb Virtual machine: yes\n2023-08-21 08:30:04 \ud83d\udce6 Highest known block at #9150\n2023-08-21 08:30:04 \u303d\ufe0f Prometheus exporter started at 127.0.0.1:9615\n2023-08-21 08:30:04 Running JSON-RPC HTTP server: addr=127.0.0.1:9933, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-08-21 08:30:04 Running JSON-RPC WS server: addr=127.0.0.1:9944, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-08-21 08:30:04 \ud83c\udfc1 CPU score: 671.55 MiBs\n2023-08-21 08:30:04 \ud83c\udfc1 Memory score: 4.47 GiBs\n2023-08-21 08:30:04 \ud83c\udfc1 Disk score (seq. writes): 339.36 MiBs\n2023-08-21 08:30:04 \ud83c\udfc1 Disk score (rand. writes): 62.48 MiBs\n2023-08-21 08:30:05 \ud83d\udd0d Discovered new external address for our node: /ip4/13.53.42.153/tcp/30333/ws/p2p/12D3KooWEdgyAtH8ZCU8ScTx1hx5NWh4gmDGNcedtLxrJ1htSeBe2023-08-21 08:30:09 \u2699\ufe0f  Syncing, target=#326624 (15 peers), best: #9406 (0x875e\u2026c887), finalized #9317 (0x37b6\u202628ff), \u2b07 321.9kiB/s \u2b06 30.1kiB/s\n2023-08-21 08:30:14 \u2699\ufe0f  Syncing 64.4 bps, target=#326624 (15 peers), best: #9728 (0xb4fe\u2026e318), finalized #9317 (0x37b6\u202628ff), \u2b07 40.2kiB/s \u2b06 1.8kiB/s\n')),(0,o.kt)("p",null,"Your node will also appear on the ",(0,o.kt)("a",{parentName:"p",href:"http://telemetry.avail.tools/"},"Avail Telemetry"),'\nwebsite, listed under the "Node name" displayed in the node command output. Be sure\nto select the appropriate network tab at the top corresponding to the network you\'ve\njoined.'),(0,o.kt)("h2",{id:"prepare-for-staking"},"Prepare for Staking"),(0,o.kt)("p",null,"Once the node is running and connected to the network, it needs to be\nlinked to accounts with bonded (staked) funds in order to be eligible\nto become an active validator."),(0,o.kt)("h3",{id:"create-avail-accounts"},"Create Avail Accounts"),(0,o.kt)("p",null,"We recommend creating two accounts, ",(0,o.kt)("inlineCode",{parentName:"p"},"stash")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"controller"),", each\nwith their own key:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The controller key is used to control staking actions and submitting\ntransactions (paying for transaction fees)."),(0,o.kt)("li",{parentName:"ul"},"The stash key is used to control most of your funds. It is\nrecommended that the stash key be a cold wallet or offline and not\nbe used for account-related activities like submitting extrinsics.")),(0,o.kt)("p",null,"You can create the two accounts via the Explorer interface. The Kate\nnetwork explorer is at ",(0,o.kt)("a",{parentName:"p",href:"https://kate.avail.tools/"},"kate.avail.tools")),(0,o.kt)("p",null,"Once you have created the accounts, Ensure each account has enough\nfunds to pay the fees for making transactions. For validators\nparticipating in our testnet, contact the Avail team to have funds\ntransferred."),(0,o.kt)("img",{src:(0,i.Z)("img/avail/stash-controller-accounts.png"),width:"200%",height:"200%"}),(0,o.kt)("admonition",{title:"Storing Funds",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Keep most of your funds in the stash account since it is meant to be\nthe custodian of your staking funds, and have just enough funds in the\ncontroller account to pay for fees."),(0,o.kt)("p",{parentName:"admonition"},"Make sure not to bond all your AVL balance since you will be unable to\npay transaction fees from your bonded balance.")),(0,o.kt)("h3",{id:"bonding-process"},"Bonding Process"),(0,o.kt)("p",null,"It is now time to set up your validator by doing the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Bond the AVL of the Stash account. These token will be put at stake\nfor the security of the network and subject to slashing."),(0,o.kt)("li",{parentName:"ul"},"Select the Controller. This is the account that will decide when to start or stop validating.")),(0,o.kt)("p",null,"First, go to the accounts section on the ",(0,o.kt)("strong",{parentName:"p"},"Staking")," tab in the\nExplorer at ",(0,o.kt)("a",{parentName:"p",href:"https://kate.avail.tools/#/staking/actions"},"kate.avail.tools")," for the\nKate network. Here, you can perform\nvarious staking actions. Click on Stash."),(0,o.kt)("img",{src:(0,i.Z)("img/avail/staking-bond-1.png"),width:"100%",height:"100%"}),(0,o.kt)("p",null,"The bonding preferences window will open with the following options:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Stash account:")," Your Stash account."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Controller account:")," Select your Controller account. This account\nonly needs a small amount of AVL in order to start and stop\nvalidating."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Value bonded:")," The amount of AVL tokens you want to bond from\nyour Stash account. You may stake any amount above the minimum."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Payment destination:")," The account where the rewards from\nvalidating are sent. More information can be found\n",(0,o.kt)("a",{parentName:"li",href:"https://wiki.polkadot.network/docs/learn-staking#reward-distribution"},"here"),".")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You should not bond all of the AVL in that account, you will require\nsome AVL for transactions. Also note that you can always bond more\n",(0,o.kt)("inlineCode",{parentName:"p"},"AVL")," later.  However, withdrawing any bonded amount requires the\nduration of the unbonding period.")),(0,o.kt)("p",null,"Once populating the fields you can click bond. You will then be\npromted to enter your wallet password. Enter your password and then\nclick ",(0,o.kt)("strong",{parentName:"p"},"Sign and Submit"),"."),(0,o.kt)("img",{src:(0,i.Z)("img/avail/staking-bond-3.png"),width:"100%",height:"100%"}),(0,o.kt)("p",null,"You should now be ready to generate your session keys. Note the\n",(0,o.kt)("strong",{parentName:"p"},"Session Key")," button, in the next step we will generate a key to\nsubmit here.  ",(0,o.kt)("img",{src:(0,i.Z)("img/avail/staking-bond-4.png"),width:"100%",height:"100%"})),(0,o.kt)("h2",{id:"session-key-management"},"Session Key Management"),(0,o.kt)("p",null,"Once your node is ",(0,o.kt)("strong",{parentName:"p"},"fully synced"),", you need to rotate and submit your\nsession keys."),(0,o.kt)("h3",{id:"rotating-session-keys"},"Rotating Session Keys"),(0,o.kt)("p",null,"Run the following command on your Avail validator node machine:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"While the node is running with the default HTTP RPC port configured.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl -H "Content-Type: application/json" -d \'{"id":1, "jsonrpc":"2.0", "method": "author_rotateKeys", "params":[]}\' http://localhost:9933\n')),(0,o.kt)("p",null,'The output will have a hex-encoded "result" field. The result is the\nconcatenation of the four public keys.  Save this result for a later\nstep.'),(0,o.kt)("p",null,"You should now restart the node so it will use the new session keys."),(0,o.kt)("h3",{id:"submitting-the-setkeys-transaction"},"Submitting the ",(0,o.kt)("inlineCode",{parentName:"h3"},"setKeys")," Transaction"),(0,o.kt)("p",null,"You need to tell the chain your Session keys by signing and submitting\nan extrinsic. This is what associates your validator with your\nController account."),(0,o.kt)("p",null,"Navigate back to the ",(0,o.kt)("a",{parentName:"p",href:"https://kate.avail.tools/#/staking/actions"},(0,o.kt)("strong",{parentName:"a"},"Network ","\u2192","\nStaking"))," if you\nclosed the window.  Ensure you are on ",(0,o.kt)("strong",{parentName:"p"},"Account actions"),", and select\n",(0,o.kt)("strong",{parentName:"p"},"Set Session Key")," on the bonding account you generated earlier.\nEnter the output ",(0,o.kt)("inlineCode",{parentName:"p"},"from author_rotateKeys")," in the field and click on\n",(0,o.kt)("strong",{parentName:"p"},"Set Session Key"),". Will be promted for password again."),(0,o.kt)("img",{src:(0,i.Z)("img/avail/set-session-keys.png"),width:"100%",height:"100%"}),(0,o.kt)("p",null,"After submitting this extrinsic, you will notice ",(0,o.kt)("strong",{parentName:"p"},"Set Session Key"),"\nchanged to ",(0,o.kt)("strong",{parentName:"p"},"Validate"),". Ensure your node is in sync before\nproceeding."),(0,o.kt)("h2",{id:"becoming-a-validator"},"Becoming a Validator"),(0,o.kt)("p",null,"If you are ready to start validating you must click ",(0,o.kt)("strong",{parentName:"p"},"Validate")),(0,o.kt)("img",{src:(0,i.Z)("img/avail/start-validating.png"),width:"100%",height:"100%"}),(0,o.kt)("p",null,"You will be prompted to enter your validator commission\npercentage. Once you click on ",(0,o.kt)("strong",{parentName:"p"},"Validate")," you will be prompted for\nyour password."),(0,o.kt)("img",{src:(0,i.Z)("img/avail/set-validate-commission.png"),width:"100%",height:"100%"}),(0,o.kt)("h3",{id:"starting-validation"},"Starting Validation"),(0,o.kt)("p",null,"Your validator is now ready to start validating. You can click the\nstop icon should you wish to exit. Note that the Avail interface does\nnot check if your node is in sync.  You need to ensure your node is in\nsync. The Avail blockchain will select your node in the next epoch or\ntwo if you have enough stake."),(0,o.kt)("img",{src:(0,i.Z)("img/avail/validator-ready.png"),width:"100%",height:"100%"}),(0,o.kt)("h3",{id:"verifying-validator-status"},"Verifying Validator Status"),(0,o.kt)("p",null,"To verify that your node is ready for possible selection at the end of\nthe next era , navigate to ",(0,o.kt)("a",{parentName:"p",href:"https://kate.avail.tools/#/staking"},(0,o.kt)("strong",{parentName:"a"},"Network ","\u2192","\nStaking"))," and select\n",(0,o.kt)("strong",{parentName:"p"},"Waiting"),". Your account should be shown there. A new validator set\nis selected every ",(0,o.kt)("strong",{parentName:"p"},"era"),", based on the staking amount."),(0,o.kt)("img",{src:(0,i.Z)("img/avail/validator-waiting-list.png"),width:"100%",height:"100%"}),(0,o.kt)("h3",{id:"validator-in-action"},"Validator in Action"),(0,o.kt)("p",null,"When the validator node has enough stake it will be elected. The image below is\nan example of our elected validator node producing blocks."),(0,o.kt)("img",{src:(0,i.Z)("img/avail/validator-active-set.png"),width:"100%",height:"100%"}),(0,o.kt)("p",null,"That's it! You're now successfully running an Avail Validator node. \ud83c\udf89"))}h.isMDXComponent=!0}}]);