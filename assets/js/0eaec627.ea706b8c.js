"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[7155],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>f});var r=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,n=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(o),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||n;return o?r.createElement(f,i(i({ref:t},c),{},{components:o})):r.createElement(f,i({ref:t},c))}));function f(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=o.length,i=new Array(n);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<n;s++)i[s]=o[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},9596:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var r=o(7462),a=(o(7294),o(3905));o(4996);const n={id:"bootstrap",title:"How to Run a Bootstrap Node",sidebar_label:"Bootstrap Node",description:"Learn how to run an Avail bootstrap node.",keywords:["docs","avail","node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},i=void 0,l={unversionedId:"operate/node/bootstrap",id:"operate/node/bootstrap",title:"How to Run a Bootstrap Node",description:"Learn how to run an Avail bootstrap node.",source:"@site/docs/operate/node/0050-bootstrap-node.md",sourceDirName:"operate/node",slug:"/operate/node/bootstrap",permalink:"/operate/node/bootstrap",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/operate/node/0050-bootstrap-node.md",tags:[],version:"current",lastUpdatedBy:"DSalman03",lastUpdatedAt:1696365534,formattedLastUpdatedAt:"Oct 3, 2023",sidebarPosition:50,frontMatter:{id:"bootstrap",title:"How to Run a Bootstrap Node",sidebar_label:"Bootstrap Node",description:"Learn how to run an Avail bootstrap node.",keywords:["docs","avail","node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},sidebar:"avail",previous:{title:"RPC Node",permalink:"/operate/node/rpc"},next:{title:"Relay Node",permalink:"/operate/node/relay"}},p={},s=[{value:"Step 1: Compile the Binary",id:"step-1-compile-the-binary",level:2},{value:"Step 2: Deploy the Binary",id:"step-2-deploy-the-binary",level:2},{value:"Step 3: Create and Edit the Configuration File",id:"step-3-create-and-edit-the-configuration-file",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(d,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This guide provides a step-by-step walkthrough for setting up a bootstrap node, which serves as an entry point for light clients in your network."),(0,a.kt)("admonition",{title:"Before you start",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"Ensure that you meet the ",(0,a.kt)("a",{parentName:"strong",href:"/operate/system-requirements"},(0,a.kt)("ins",null,"system requirements")),"."),"\nWe recommend downloading the pre-compiled binary for speed and convenience."),(0,a.kt)("p",{parentName:"admonition"},"It's advisable to deploy multiple bootstrap nodes. A good rule of thumb is to have at least three to five bootstrap nodes to kickstart a new network. ")),(0,a.kt)("h2",{id:"step-1-compile-the-binary"},"Step 1: Compile the Binary"),(0,a.kt)("p",null,"Navigate to the cloned project directory and compile the source code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd avail-light-bootstrap              \ncargo build --release                 # Compile the project in release mode\n")),(0,a.kt)("p",null,"Upon successful compilation, you'll find the binary at ",(0,a.kt)("inlineCode",{parentName:"p"},"target/release/avail-light-bootstrap"),"."),(0,a.kt)("h2",{id:"step-2-deploy-the-binary"},"Step 2: Deploy the Binary"),(0,a.kt)("p",null,"If you've compiled the binary on a local machine, transfer it to your server using ",(0,a.kt)("inlineCode",{parentName:"p"},"scp")," or any other secure method."),(0,a.kt)("h2",{id:"step-3-create-and-edit-the-configuration-file"},"Step 3: Create and Edit the Configuration File"),(0,a.kt)("p",null,"On your server, navigate to the directory where you've placed the binary. Create and edit a ",(0,a.kt)("inlineCode",{parentName:"p"},"config.yaml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"touch config.yaml                     # Create a new config.yaml file\nnano config.yaml                      # Open the file in a text editor\n")),(0,a.kt)("p",null,"Populate the file with the following example configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"log_level: 'INFO'                     # Logging level\nlog_format_json: false                # Log format\nsecret_key: { seed: \"unique_seed\" }  # Secret key setting\nlibp2p_port: 39000                    # libp2p port\nlibp2p_identify_protocol: '/avail_kad/id/1.0.0'  # libp2p protocol\n")),(0,a.kt)("p",null,"For more advanced configurations, consult the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/availproject/avail-light-bootstrap#config-reference"},(0,a.kt)("ins",null,"Configuration Reference")),"."))}u.isMDXComponent=!0}}]);