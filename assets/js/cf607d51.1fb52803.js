"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[3092],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(a),h=o,m=u["".concat(s,".").concat(h)]||u[h]||c[h]||r;return a?n.createElement(m,i(i({ref:t},d),{},{components:a})):n.createElement(m,i({ref:t},d))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5543:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(7462),o=(a(7294),a(3905));a(4996);const r={id:"binaries",title:"Running a Full Node with Binaries",sidebar_label:"Using Binaries",description:"Discover how to operate an Avail full node through binaries.",keywords:["documentation","avail","node","full node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},i=void 0,l={unversionedId:"operate/node/binaries",id:"operate/node/binaries",title:"Running a Full Node with Binaries",description:"Discover how to operate an Avail full node through binaries.",source:"@site/docs/operate/node/0020-full-node-binaries.md",sourceDirName:"operate/node",slug:"/operate/node/binaries",permalink:"/operate/node/binaries",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/operate/node/0020-full-node-binaries.md",tags:[],version:"current",lastUpdatedBy:"DSalman03",lastUpdatedAt:1696365534,formattedLastUpdatedAt:"Oct 3, 2023",sidebarPosition:20,frontMatter:{id:"binaries",title:"Running a Full Node with Binaries",sidebar_label:"Using Binaries",description:"Discover how to operate an Avail full node through binaries.",keywords:["documentation","avail","node","full node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},sidebar:"avail",previous:{title:"Full Node",permalink:"/category/full-node"},next:{title:"Using Docker",permalink:"/operate/node/docker"}},s={},p=[{value:"Option 1: Run the Pre-Built Release",id:"option-1-run-the-pre-built-release",level:2},{value:"Option 2: Build From Source",id:"option-2-build-from-source",level:2},{value:"Step 1: Compile the Binary",id:"step-1-compile-the-binary",level:3},{value:"Step 2: Run the Node",id:"step-2-run-the-node",level:3},{value:"Archive Mode",id:"archive-mode",level:4}],d={toc:p},u="wrapper";function c(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This guide provides step-by-step instructions on how to set up and run a full node for the Avail network using pre-compiled binaries. Whether you're a beginner or an experienced node operator, this guide aims to make the process straightforward."),(0,o.kt)("admonition",{title:"Before you start",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Ensure that you meet the ",(0,o.kt)("a",{parentName:"strong",href:"/operate/system-requirements"},(0,o.kt)("ins",null,"system requirements")),"."),"\nWe recommend downloading the pre-compiled binary for speed and convenience.")),(0,o.kt)("h2",{id:"option-1-run-the-pre-built-release"},"Option 1: Run the Pre-Built Release"),(0,o.kt)("p",null,"All you need to do is run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --port 30333 --base-path `pwd`/data --chain `pwd`/chainspec.raw.json\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Sample Output"),(0,o.kt)("p",null,"The client output should look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'2023-06-03 20:36:29 Avail Node\n2023-06-03 20:36:29 \u270c\ufe0f  version 1.6.0-99b85257d6b\n2023-06-03 20:36:29 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-06-03 20:36:29 \ud83d\udccb Chain specification: Avail Kate Testnet\n2023-06-03 20:36:29 \ud83c\udff7  Node name: bewildered-distance-1229\n2023-06-03 20:36:29 \ud83d\udc64 Role: FULL\n2023-06-03 20:36:29 \ud83d\udcbe Database: RocksDb at /Users/thunder/code/avail/data/chains/Avail Testnet_6831251e-0222-11ee-a2c3-c90377335962/db/full\n2023-06-03 20:36:29 \u26d3  Native runtime: data-avail-9 (data-avail-0.tx1.au11)\n2023-06-03 20:36:35 \ud83d\udc76 Creating empty BABE epoch changes on what appears to be first startup.\n2023-06-03 20:36:35 \ud83c\udff7  Local node identity is: 12D3KooWPt7odw3aeq7azZDugXjNuUvQNPU58n1VRBzY1YBqsjkr\n2023-06-03 20:36:35 Prometheus metrics extended with avail metrics\n2023-06-03 20:36:35 \ud83d\udcbb Operating system: macos\n2023-06-03 20:36:35 \ud83d\udcbb CPU architecture: aarch64\n2023-06-03 20:36:35 \ud83d\udce6 Highest known block at #0\n2023-06-03 20:36:35 \u303d\ufe0f Prometheus exporter started at 127.0.0.1:9615\n2023-06-03 20:36:35 Running JSON-RPC HTTP server: addr=127.0.0.1:9933, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-06-03 20:36:35 Running JSON-RPC WS server: addr=127.0.0.1:9944, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-06-03 20:36:35 \ud83c\udfc1 CPU score: 724.71 MiBs\n2023-06-03 20:36:35 \ud83c\udfc1 Memory score: 41.49 GiBs\n2023-06-03 20:36:35 \ud83c\udfc1 Disk score (seq. writes): 1.91 GiBs\n2023-06-03 20:36:35 \ud83c\udfc1 Disk score (rand. writes): 454.66 MiBs\n'))),(0,o.kt)("p",null,"Your node will also appear on the ",(0,o.kt)("a",{parentName:"p",href:"http://telemetry.avail.tools/"},(0,o.kt)("ins",null,"Avail Telemetry")),' site, listed under the "Node name" from the node command output. Be sure to select the appropriate network tab at the top to view your node\'s status.'),(0,o.kt)("h2",{id:"option-2-build-from-source"},"Option 2: Build From Source"),(0,o.kt)("h3",{id:"step-1-compile-the-binary"},"Step 1: Compile the Binary"),(0,o.kt)("p",null,"To compile the client source code, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build --release -p data-avail\n")),(0,o.kt)("h3",{id:"step-2-run-the-node"},"Step 2: Run the Node"),(0,o.kt)("p",null,'Create a working directory and copy the binary into that directory. Follow the rest of the "Quick Full Node Setup" instructions to download the appropriate chain specification file and run the node.'),(0,o.kt)("admonition",{title:"Run Avail Locally",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you are working on the node itself, it can be useful to run a local dev node with a temporary datastore:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --dev --tmp\n"))),(0,o.kt)("h4",{id:"archive-mode"},"Archive Mode"),(0,o.kt)("p",null,"To run an archive node, you must first review the ",(0,o.kt)("a",{parentName:"p",href:"/category/run-a-validator-node/"},"full node setup guide"),". You will complete all the same steps. The only difference is you will add ",(0,o.kt)("inlineCode",{parentName:"p"},"--pruning archive")," to the parameters."),(0,o.kt)("admonition",{title:"Storage space requirements",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"An archive node will require more storage over time and the storage space requirements will grow over time.")),(0,o.kt)("p",null,"Example for an archive node start command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --base-path ~/avail-node/data \\\n                --chain ~/avail-node/chainspec.raw.json \\\n                --pruning archive \\\n                --port 30333 \\\n                --bootnodes /dns/gateway-fullnode-002.testnet.avail.tools/tcp/30333/p2p/12D3KooWNuBaLtAGNxQbei7rUzpp8N8TF8k5kPsgKShAJgK4crkB \\\n                /dns/gateway-fullnode-001.testnet.avail.tools/tcp/30333/p2p/12D3KooWDgqCRtsJWKjckh2XHtRZbboVdgDJswsxoNmX8PMf59bV \\\n                /dns/gateway-fullnode-003.testnet.avail.tools/tcp/30333/p2p/12D3KooWBNy1vzragtwiummqXwry19h6dke68hybY6jVeEH4mAtT\n")))}c.isMDXComponent=!0}}]);